version: '3.8'

services:

  traefik:
    image: traefik:latest
    command:
      - "--providers.docker=true"
      - "--providers.docker.swarmmode=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.email=${LETSENCRYPT_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/etc/traefik/acme.json"
      - "--log.level=INFO"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik/traefik.yml:/etc/traefik/traefik.yml"
      - "./traefik/dynamic.yml:/etc/traefik/dynamic.yml"
      - "./traefik/acme.json:/etc/traefik/acme.json"
    networks:
      - traefik-public
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.api.rule=Host(`${TRAEFIK_SUBDOMAIN}.${DOMAIN}`)"
        - "traefik.http.routers.api.service=api@internal"
        - "traefik.http.routers.api.entrypoints=websecure"
        - "traefik.http.routers.api.tls.certresolver=letsencrypt"

  n8n:
    image: n8nio/n8n:latest
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=n8n-db
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=postgres
      - DB_POSTGRESDB_PASSWORD=postgres
      - N8N_HOST=${N8N_SUBDOMAIN}.${DOMAIN}
      - N8N_PORT=5678
    networks:
      - traefik-public
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.n8n.rule=Host(`${N8N_SUBDOMAIN}.${DOMAIN}`)"
        - "traefik.http.routers.n8n.entrypoints=websecure"
        - "traefik.http.routers.n8n.tls.certresolver=letsencrypt"
        - "traefik.http.services.n8n.loadbalancer.server.port=5678"

  n8n-db:
    image: bitnami/postgresql:16
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=n8n
    volumes:
      - /opt/infra/data/n8n:/bitnami/postgresql
    networks:
      - traefik-public

  redis:
    image: redis:latest
    volumes:
      - /opt/infra/data/redis:/data
    networks:
      - traefik-public
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.redis.rule=Host(`${REDIS_SUBDOMAIN}.${DOMAIN}`)"
        - "traefik.http.routers.redis.entrypoints=websecure"
        - "traefik.http.routers.redis.tls.certresolver=letsencrypt"
        - "traefik.http.services.redis.loadbalancer.server.port=6379"

  redisinsight:
    image: redislabs/redisinsight:latest
    networks:
      - traefik-public
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.redisinsight.rule=Host(`${REDISINSIGHT_SUBDOMAIN}.${DOMAIN}`)"
        - "traefik.http.routers.redisinsight.entrypoints=websecure"
        - "traefik.http.routers.redisinsight.tls.certresolver=letsencrypt"
        - "traefik.http.services.redisinsight.loadbalancer.server.port=5540"

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - /opt/infra/data/postgres:/var/lib/postgresql/data
    networks:
      - traefik-public
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.pg.rule=Host(`${PGADMIN_SUBDOMAIN}.${DOMAIN}`)"
        - "traefik.http.routers.pg.entrypoints=websecure"
        - "traefik.http.routers.pg.tls.certresolver=letsencrypt"
        - "traefik.http.services.pg.loadbalancer.server.port=5432"

  chatwoot:
    image: chatwoot/chatwoot:latest
    networks:
      - traefik-public
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.chatwoot.rule=Host(`${CHATWOOT_SUBDOMAIN}.${DOMAIN}`)"
        - "traefik.http.routers.chatwoot.entrypoints=websecure"
        - "traefik.http.routers.chatwoot.tls.certresolver=letsencrypt"
        - "traefik.http.services.chatwoot.loadbalancer.server.port=3000"

  evoapi:
    image: atendai/evolution-api:latest
    networks:
      - traefik-public
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.evoapi.rule=Host(`${EVOAPI_SUBDOMAIN}.${DOMAIN}`)"
        - "traefik.http.routers.evoapi.entrypoints=websecure"
        - "traefik.http.routers.evoapi.tls.certresolver=letsencrypt"
        - "traefik.http.services.evoapi.loadbalancer.server.port=8080"

  portainer:
    image: portainer/portainer-ce:latest
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/infra/data/portainer:/data
    networks:
      - traefik-public
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.portainer.rule=Host(`${PORTAINER_SUBDOMAIN}.${DOMAIN}`)"
        - "traefik.http.routers.portainer.entrypoints=websecure"
        - "traefik.http.routers.portainer.tls.certresolver=letsencrypt"
        - "traefik.http.services.portainer.loadbalancer.server.port=9000"

networks:
  traefik-public:
    external: true
